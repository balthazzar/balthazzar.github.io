{"version":3,"sources":["CanvasComponent.js","index.js"],"names":["intr","time_line_intr","ctx","_ctx","SCREEN_WIDTH","window","innerWidth","SCREEN_HEIGHT","innerHeight","chart","_charts","RATIO","_devicePixelRatio","devicePixelRatio","yScale","xScale","timeline_yScale","timeline_xScale","min_timeline_width","loadTypes","ULTRA_PERFORMANCE","HIGH_PERFORMANCE","DEFAULT","HIGH","ULTRA","charts","name","value","perfomance","loadType","scale_steps","columns","length","timeline_height","_canvas","document","createElement","CanvasComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","refs","canvas","width","height","getContext","setTransform","style","xAxis","yAxis","forEach","axis","types","slice","console","log","Math","trunc","max_y","absolute_max_y","yVisability","keys","status","i","setState","startIndex","endIndex","cursorPosition","x","y","cursorAxisPosition","cursorPinned","gridStepNumber","target_yScale","draw","_this","state","target_timeline_yScale","scale_step","abs","timeline_scale_step","alfa_step","last_yScale","upScale","downScale","objectSpread","defineProperty","alfa","options","cancelAnimationFrame","requestAnimationFrame","scale","_this2","bind","_this3","clearRect","drawGrid","drawChart","drawTimeline","drawImage","lineWidth","strokeStyle","fillStyle","globalAlpha","beginPath","moveTo","lineTo","fillText","toString","stroke","closePath","_a","Date","target_lineWidth","j","colors","floor","region","Path2D","rect","save","clip","strokeRect","edgeWidth","fillRect","restore","_this4","font","arc","PI","fill","e","stopPropagation","pos","getMousePos","dragSelect","mousePosition","getTimelineCursorPosition","dragLeftEdge","dragRightEdge","_this5","hWidth","target_startIndex","xIndex","target_endIndex","clearInterval","delta","setInterval","_startIndex","_endIndex","deltaStart","deltaEnd","calcMaxYAxisValue","d2","d","d1","getCursorPosition","drawCursor","scaleChart","getBoundingClientRect","undefined","clientX","touches","left","right","clientY","top","bottom","real_x","appr_x","appr_y","result","preventDefault","_this6","target_position","cursor_step","target","call","_this7","map","react_default","a","onClick","buttonClickHandler","option","ref","onMouseMove","mouseMoveHandler","canvasClickHandler","onMouseLeave","canvasLeaveHandler","onMouseDown","mouseDownHandler","onMouseUp","mouseUpHandler","onTouchStart","onTouchEnd","onTouchMove","renderButtons","defaultValue","onChange","selectPerfHandler","renderOptions","selectChartHandler","renderChartsOptions","React","Component","ReactDOM","render","CanvasComponent_CanvasComponent","getElementById"],"mappings":"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","file":"static/js/main.ac26da73.chunk.js","sourcesContent":["import React from 'react';\n\nimport _charts from './chart_data.json';\n\nconst SCREEN_WIDTH = window.innerWidth;\nconst SCREEN_HEIGHT = window.innerHeight / 1.2;\nlet chart = _charts[0];\n\nlet RATIO = 1;\nlet _devicePixelRatio = devicePixelRatio;\nlet yScale = 1;\nlet xScale = 1;\nlet timeline_yScale = 1;\nlet timeline_xScale = 1;\nlet min_timeline_width = 10;\nlet intr;\n// let tm;\nlet time_line_intr;\nlet ctx;\nlet _ctx;\n\nconst loadTypes = {\n    ULTRA_PERFORMANCE: function() {\n        _devicePixelRatio = 1;\n\n        return 48;\n    },\n    HIGH_PERFORMANCE: function() {\n        _devicePixelRatio = 2;\n\n        return 48;\n    },\n    DEFAULT: function() {\n        _devicePixelRatio = 2;\n\n        return 60;\n    },\n    HIGH: function() {\n        _devicePixelRatio = 2;\n\n        return 100;\n    },\n    ULTRA: function() {\n        _devicePixelRatio = 2;\n\n        return 150;\n    },\n};\n\nconst charts = [\n    {\n        name: 'Chart #1',\n        value: 0\n    },\n    {\n        name: 'Chart #2',\n        value: 1\n    },\n    {\n        name: 'Chart #3',\n        value: 2\n    },\n    {\n        name: 'Chart #4',\n        value: 3\n    }, {\n        name: 'Chart #5',\n        value: 4\n    }\n];\n\nconst perfomance = [\n    {\n        name: 'Ultra Performance',\n        value: 'ULTRA_PERFORMANCE'\n    },\n    {\n        name: 'High Performance',\n        value: 'HIGH_PERFORMANCE'\n    },\n    {\n        name: 'Default Performance',\n        value: 'DEFAULT'\n    },\n    {\n        name: 'High load',\n        value: 'HIGH'\n    },\n    {\n        name: 'Ultra load',\n        value: 'ULTRA'\n    }\n];\n\n// const SCALE_TIME = 300;\n\nlet loadType = loadTypes.DEFAULT();\nlet scale_steps = loadType / chart.columns.length;\n\nconst edgeWidth = 4.5;\nconst timeline_height = SCREEN_HEIGHT / 9;\nconst timeline_delta_step = 1;\nconst _canvas = document.createElement(\"canvas\");\n\nexport class CanvasComponent extends React.Component {\n    componentDidMount() {\n\n        if (_devicePixelRatio >= 2 && _devicePixelRatio !== RATIO) {\n            this.refs.canvas.width *= 2;\n            this.refs.canvas.height *= 2;\n\n            RATIO = 2;\n        }\n\n        _canvas.width = this.refs.canvas.width;\n        _canvas.height = this.refs.canvas.height;\n\n        _ctx = _canvas.getContext('2d');\n        ctx = this.refs.canvas.getContext('2d');\n\n        ctx.setTransform(RATIO, 0, 0, RATIO, 0, 0);\n        _ctx.setTransform(RATIO, 0, 0, RATIO, 0, 0);\n\n\n        this.refs.canvas.style.width = SCREEN_WIDTH + 'px';\n        this.refs.canvas.style.height = SCREEN_HEIGHT + 'px';\n\n        let xAxis = [];\n        let yAxis = {};\n\n        chart.columns.forEach(axis => {\n            switch (chart.types[axis[0]]) {\n                case 'x':\n                    xAxis = axis.slice(1, axis.length);\n                    break;\n                case 'line':\n                    yAxis[axis[0]] = axis.slice(1, axis.length);\n                    break;\n                default:\n                    console.log('Unknown type')\n            }\n        });\n\n        min_timeline_width = Math.trunc(xAxis.length / 5);\n\n        let max_y = 0;\n        let absolute_max_y = 0;\n        let yVisability = {};\n\n        Object.keys(yAxis).forEach(key => {\n            yVisability[key] = {\n                value: true,\n                status: 0\n            };\n\n            for (let i = 0; i < yAxis[key].length; i++) {\n                if (yAxis[key][i] > max_y && i >= 0 && i <= xAxis.length - 1) max_y = yAxis[key][i];\n                if (yAxis[key][i] > absolute_max_y) absolute_max_y = yAxis[key][i];\n            }\n        });\n\n\n        yScale = max_y / (SCREEN_HEIGHT - SCREEN_HEIGHT / 10);\n        xScale = (xAxis[min_timeline_width] - xAxis[0]) / 10000000 / SCREEN_WIDTH;\n\n        timeline_xScale = (xAxis[xAxis.length - 1] - xAxis[0]) / 10000000 / SCREEN_WIDTH;\n        timeline_yScale = absolute_max_y / (timeline_height - timeline_height / 10);\n\n        this.setState({\n            ctx,\n            _ctx,\n            xAxis,\n            yAxis,\n            max_y,\n            absolute_max_y,\n            yVisability,\n            startIndex: 0,\n            endIndex: min_timeline_width,\n            cursorPosition: {\n                x: 0,\n                y: {}\n            },\n            cursorAxisPosition: {\n                x: 0\n            },\n            cursorPinned: false,\n            gridStepNumber: 0,\n            target_yScale: yScale\n        }, this.draw);\n    }\n\n    scaleChart() {\n        const target_yScale = this.state.max_y / (SCREEN_HEIGHT - SCREEN_HEIGHT / 10);\n        const target_timeline_yScale = this.state.absolute_max_y / (timeline_height - timeline_height / 10);\n        const scale_step = Math.abs(yScale - target_yScale) / scale_steps;\n        const timeline_scale_step = Math.abs(timeline_yScale - target_timeline_yScale) / scale_steps;\n        const alfa_step = 1 / (Math.abs(yScale - target_yScale) / scale_step);\n\n        xScale = (this.state.xAxis[this.state.endIndex] - this.state.xAxis[this.state.startIndex]) / 10000000 / SCREEN_WIDTH;\n\n        if (target_yScale !== this.state.target_yScale && (yScale / target_yScale >= 1.09 || yScale / target_yScale <= 0.91)) {\n            this.setState({\n                target_yScale,\n                last_yScale: yScale\n            });\n\n            if (yScale <= target_yScale) {\n                this.upScale({\n                    target_yScale,\n                    scale_step,\n                    timeline_scale_step,\n                    alfa_step\n                });\n            } else if (yScale > target_yScale) {\n                this.downScale({\n                    target_yScale,\n                    scale_step,\n                    timeline_scale_step,\n                    alfa_step\n                });\n            }\n        } else {\n            Object.keys(this.state.yVisability).forEach(key => {\n                if (this.state.yVisability[key].value && this.state.yVisability[key].status === 2) {\n                    this.setState({\n                        yVisability: {\n                            ...this.state.yVisability,\n                            [key]: {\n                                ...this.state.yVisability[key],\n                                status: 0,\n                                alfa: 1\n                            }\n                        }\n                    }, this.draw);\n                } else if (!this.state.yVisability[key].value && !this.state.yVisability[key].status) {\n                    this.setState({\n                        yVisability: {\n                            ...this.state.yVisability,\n                            [key]: {\n                                ...this.state.yVisability[key],\n                                status: 1,\n                                alfa: 0\n                            }\n                        }\n                    }, this.draw);\n                }\n            });\n\n            this.draw();\n        }\n    }\n\n    upScale(options) {\n        const {target_yScale, alfa_step, scale_step, timeline_scale_step} = options;\n\n        function scale() {\n            yScale += scale_step;\n            timeline_yScale += timeline_scale_step;\n\n            if (yScale >= target_yScale) {\n                yScale = target_yScale;\n\n                const yVisability = this.state.yVisability;\n\n                Object.keys(this.state.yVisability).forEach(key => {\n                    if (this.state.yVisability[key].value && this.state.yVisability[key].status === 2) {\n                        yVisability[key] = {\n                            ...this.state.yVisability[key],\n                            status: 0,\n                            alfa: 1\n                        };\n                    } else if (!this.state.yVisability[key].value && !this.state.yVisability[key].status) {\n                        yVisability[key] = {\n                            ...this.state.yVisability[key],\n                            status: 1,\n                            alfa: 0\n                        };\n                    }\n                });\n\n                this.setState({\n                    yVisability,\n                    gridStepNumber: 0\n                }, this.draw);\n\n                intr = null;\n            } else {\n                const yVisability = this.state.yVisability;\n\n                Object.keys(this.state.yVisability).forEach(key => {\n                    if (this.state.yVisability[key].value && this.state.yVisability[key].status === 2) {\n                        yVisability[key] = {\n                            ...this.state.yVisability[key],\n                            alfa: this.state.yVisability[key].alfa + alfa_step\n                        };\n                    }\n                });\n\n                this.setState({\n                    yVisability,\n                    gridStepNumber: this.state.gridStepNumber - 1\n                });\n\n                this.draw();\n\n                intr = requestAnimationFrame(scale.bind(this));\n            }\n        };\n\n        if (intr) {\n/*\n            if (tm) {\n                clearInterval(tm);\n            }\n\n            tm = setInterval(() => {\n                if (!intr) {\n                    intr = requestAnimationFrame(scale.bind(this));\n\n                    clearInterval(tm);\n                    tm = null;\n                }\n            });\n\n            return;\n*/\n\n            cancelAnimationFrame(intr);\n        }\n\n        intr = requestAnimationFrame(scale.bind(this));\n    }\n\n    downScale(options) {\n        const {target_yScale, alfa_step, scale_step, timeline_scale_step} = options;\n\n        function scale() {\n            yScale -= scale_step;\n            timeline_yScale -= timeline_scale_step;\n\n            if (yScale <= target_yScale) {\n                yScale = target_yScale;\n\n                const yVisability = this.state.yVisability;\n\n                Object.keys(this.state.yVisability).forEach(key => {\n                    if (!this.state.yVisability[key].value && !this.state.yVisability[key].status) {\n                        yVisability[key] = {\n                            ...this.state.yVisability[key],\n                            status: 1,\n                            alfa: 0\n                        }\n                    }\n                });\n\n                this.setState({\n                    yVisability,\n                    gridStepNumber: 0\n                }, this.draw);\n\n                intr = null;\n            } else {\n                const yVisability = this.state.yVisability;\n\n                Object.keys(this.state.yVisability).forEach(key => {\n                    if (this.state.yVisability[key].value && this.state.yVisability[key].status === 2) {\n                        const alfa = (typeof this.state.yVisability[key].alfa === 'number' ? this.state.yVisability[key].alfa : 0) + alfa_step;\n\n                        yVisability[key] = {\n                            ...this.state.yVisability[key],\n                            alfa: alfa > 0 ? alfa : 0\n                        };\n                    } else if (!this.state.yVisability[key].value && !this.state.yVisability[key].status) {\n                        const alfa = (typeof this.state.yVisability[key].alfa === 'number' ? this.state.yVisability[key].alfa : 0) - alfa_step;\n\n                        yVisability[key] = {\n                            ...this.state.yVisability[key],\n                            alfa: alfa > 0 ? alfa : 0\n                        };\n                    }\n                });\n\n                this.setState({\n                    yVisability,\n                    gridStepNumber: this.state.gridStepNumber + 1\n                });\n\n                this.draw();\n\n                intr = requestAnimationFrame(scale.bind(this));\n            }\n        };\n\n        if (intr) {\n/*\n            if (tm) {\n                clearInterval(tm);\n            }\n\n            tm = setInterval(() => {\n                if (!intr) {\n                    intr = requestAnimationFrame(scale.bind(this));\n\n                    clearInterval(tm);\n                    tm = null;\n                }\n            });\n\n            return;\n*/\n            cancelAnimationFrame(intr);\n        }\n\n        intr = requestAnimationFrame(scale.bind(this));\n    }\n\n    draw() {\n        this.state._ctx.clearRect(0, 0, _canvas.width, _canvas.height);\n\n        this.drawGrid(this.state._ctx);\n        this.drawChart(this.state._ctx);\n        this.drawTimeline(this.state._ctx);\n\n        this.state.ctx.clearRect(0, 0, this.refs.canvas.width, this.refs.canvas.height);\n        this.state.ctx.drawImage(_canvas, 0, 0, this.refs.canvas.width / RATIO, this.refs.canvas.height / RATIO);\n    }\n\n    drawGrid(ctx) {\n        // ctx.font = '13px arial';\n        ctx.lineWidth = 0.2;\n        ctx.strokeStyle = '#acacac';\n        ctx.fillStyle = '#acacac';\n\n        if (this.state.gridStepNumber) {\n            ctx.globalAlpha = this.state.gridStepNumber > 0 ? this.state.gridStepNumber / scale_steps : -this.state.gridStepNumber / scale_steps;\n            ctx.beginPath();\n\n            for (let i = this.state.target_yScale * SCREEN_HEIGHT / 5; i <= SCREEN_HEIGHT * this.state.target_yScale; i += this.state.target_yScale * SCREEN_HEIGHT / 5) {\n                ctx.moveTo(0, SCREEN_HEIGHT - i / yScale);\n                ctx.lineTo(SCREEN_WIDTH, SCREEN_HEIGHT - i / yScale);\n\n                ctx.fillText((Math.trunc(i)).toString(), 0, SCREEN_HEIGHT - i / yScale - 10, 20);\n            }\n            ctx.stroke();\n\n            ctx.globalAlpha = this.state.gridStepNumber > 0 ? 1 - this.state.gridStepNumber / scale_steps : 1 + this.state.gridStepNumber / scale_steps;\n            ctx.beginPath();\n\n            for (let i = this.state.last_yScale * SCREEN_HEIGHT / 5; i <= SCREEN_HEIGHT * this.state.last_yScale; i += this.state.last_yScale * SCREEN_HEIGHT / 5) {\n                ctx.moveTo(0, SCREEN_HEIGHT - i / yScale);\n                ctx.lineTo(SCREEN_WIDTH, SCREEN_HEIGHT - i / yScale);\n\n                ctx.fillText((Math.trunc(i)).toString(), 0, SCREEN_HEIGHT - i / yScale - 10, 20);\n            }\n\n            ctx.stroke();\n\n            ctx.globalAlpha = 1;\n\n            ctx.beginPath();\n\n            ctx.moveTo(0, SCREEN_HEIGHT);\n            ctx.lineTo(SCREEN_WIDTH, SCREEN_HEIGHT);\n\n            ctx.stroke();\n\n            ctx.fillText('0', 0, SCREEN_HEIGHT - 10, 20);\n        } else {\n            ctx.beginPath();\n\n            for (let i = 0; i <= SCREEN_HEIGHT * yScale; i += yScale * SCREEN_HEIGHT / 5) {\n                ctx.moveTo(0, SCREEN_HEIGHT - i / yScale);\n                ctx.lineTo(SCREEN_WIDTH, SCREEN_HEIGHT - i / yScale);\n\n                ctx.fillText((Math.trunc(i)).toString(), 0, SCREEN_HEIGHT - i / yScale - 10, 20);\n            }\n\n            ctx.stroke();\n        }\n\n        ctx.closePath();\n\n        const _a = Math.trunc((this.state.endIndex - this.state.startIndex) / 5);\n\n\n        for (let i = this.state.startIndex; i <= this.state.endIndex; i++) {\n            if (i !== 0 && i % Math.trunc(_a) === 3) {\n                ctx.fillText((new Date(this.state.xAxis[i])).toString().slice(4, 10), (this.state.xAxis[i] - this.state.xAxis[this.state.startIndex]) / 10000000 / xScale - 15, SCREEN_HEIGHT + 20, 30);\n            }\n        }\n\n    }\n\n    drawChart(ctx) {\n        // ctx.font = '14px arial';\n        const target_lineWidth = 220 / (this.state.endIndex - this.state.startIndex);\n\n        if (target_lineWidth > 2.5) {\n            ctx.lineWidth = 2.5;\n        } else if (target_lineWidth < 1) {\n            ctx.lineWidth = 1.2;\n        } else {\n            ctx.lineWidth = target_lineWidth;\n        }\n\n        const keys = Object.keys(this.state.yAxis);\n\n        for (let j = 0; j < keys.length; j++) {\n            const key = keys[j];\n\n            if (this.state.yVisability[key].value || !this.state.yVisability[key].status) {\n                ctx.strokeStyle = chart.colors[key];\n\n                if (typeof this.state.yVisability[key].alfa === 'number') {\n                    ctx.globalAlpha = this.state.yVisability[key].alfa;\n                }\n\n                ctx.beginPath();\n\n                for (let i = this.state.startIndex; i <= this.state.endIndex; i++) {\n                    const x = Math.floor((this.state.xAxis[i] - this.state.xAxis[this.state.startIndex]) / 10000000 / xScale);\n                    const y = Math.floor(SCREEN_HEIGHT - this.state.yAxis[key][i] / yScale);\n                    ctx[i === 0 ? 'moveTo' : 'lineTo'].apply(ctx, [x, y]);\n                }\n\n                ctx.stroke();\n                ctx.closePath();\n\n                ctx.globalAlpha = 1;\n            }\n        }\n    }\n\n    drawTimeline(ctx) {\n        let region = new Path2D();\n\n        region.rect(0, SCREEN_HEIGHT + 50, SCREEN_WIDTH, timeline_height);\n\n        ctx.save();\n        ctx.clip(region);\n\n        ctx.globalAlpha = 0.95;\n        ctx.strokeStyle = '#ddeaf3';\n        ctx.lineWidth = edgeWidth;\n        ctx.strokeRect((this.state.xAxis[this.state.startIndex] - this.state.xAxis[0]) / 10000000 / timeline_xScale + edgeWidth / 2, SCREEN_HEIGHT + 49, (this.state.xAxis[this.state.endIndex] - this.state.xAxis[0]) / 10000000 / timeline_xScale - (this.state.xAxis[this.state.startIndex] - this.state.xAxis[0]) / 10000000 / timeline_xScale - edgeWidth, timeline_height + 2);\n\n        ctx.globalAlpha = 1;\n        ctx.lineWidth = 0.7;\n\n        const keys = Object.keys(this.state.yAxis);\n        for (let j = 0; j < keys.length; j++) {\n            let key = keys[j];\n\n            if (this.state.yVisability[key].value || !this.state.yVisability[key].status) {\n                ctx.strokeStyle = chart.colors[key];\n\n                if (typeof this.state.yVisability[key].alfa === 'number') ctx.globalAlpha = this.state.yVisability[key].alfa;\n                ctx.beginPath();\n\n                for (let i = 0; i < this.state.xAxis.length; i++) {\n                    const x = Math.floor((this.state.xAxis[i] - this.state.xAxis[0]) / 10000000 / timeline_xScale);\n                    const y = Math.floor(SCREEN_HEIGHT + 50 + timeline_height - this.state.yAxis[key][i] / timeline_yScale);\n\n                    ctx[i === 0 ? 'moveTo' : 'lineTo'].apply(ctx, [x, y]);\n                }\n\n                ctx.stroke();\n\n                ctx.globalAlpha = 1;\n            }\n        }\n\n        ctx.closePath();\n\n        ctx.fillStyle = '#f5f9fb';\n        ctx.globalAlpha = .8;\n        ctx.fillRect(0, SCREEN_HEIGHT + 50, (this.state.xAxis[this.state.startIndex] - this.state.xAxis[0]) / 10000000 / timeline_xScale, timeline_height);\n        ctx.fillRect((this.state.xAxis[this.state.endIndex] - this.state.xAxis[0]) / 10000000 / timeline_xScale, SCREEN_HEIGHT + 50, SCREEN_WIDTH - (this.state.xAxis[this.state.endIndex] - this.state.xAxis[0]) / 10000000 / timeline_xScale, timeline_height);\n\n        ctx.restore();\n        ctx.globalAlpha = 1;\n    }\n\n    drawCursor(ctx) {\n        ctx.font = '16px arial';\n        ctx.strokeStyle = '#acacac';\n\n        ctx.lineWidth = 0.5;\n        ctx.beginPath();\n\n        ctx.moveTo(this.state.cursorPosition.x, 0);\n        ctx.lineTo(this.state.cursorPosition.x, SCREEN_HEIGHT);\n\n        ctx.stroke();\n\n        ctx.closePath();\n\n        /*\n                ctx.shadowColor = '#acacac';\n                ctx.shadowBlur = 10;\n                ctx.shadowOffsetX = 1;\n                ctx.shadowOffsetY = 3;\n\n                ctx.fillStyle = '#ffffff';\n                ctx.fillRect(this.state.cursorPosition.x - 90, SCREEN_HEIGHT / 7, 150, 100);\n\n                ctx.shadowBlur = 0;\n                ctx.shadowOffsetX = 0;\n                ctx.shadowOffsetY = 0;\n\n                ctx.strokeRect(this.state.cursorPosition.x - 90, SCREEN_HEIGHT / 7, 150, 100)\n\n\n                ctx.fillStyle = '#acacac';\n        */\n        //ctx.fillText(new Date(this.state.cursorPosition.x * xScale * 10000000 + this.state.xAxis[0]).toString().slice(0, 10), this.state.cursorPosition.x - 90, SCREEN_HEIGHT / 5, 200);\n\n        const target_lineWidth = 220 / (this.state.endIndex - this.state.startIndex);\n\n        if (target_lineWidth > 2.5) {\n            ctx.lineWidth = 2.5;\n        } else if (target_lineWidth < 1) {\n            ctx.lineWidth = 1.2;\n        } else {\n            ctx.lineWidth = target_lineWidth;\n        }\n        ctx.fillStyle = '#ffffff';\n\n        Object.keys(this.state.cursorPosition.y).forEach(key => {\n            if (this.state.yVisability[key].value) {\n                ctx.beginPath();\n\n                // ctx.font = '20px arial';\n                // ctx.fillStyle = chart.colors[key];\n                // ctx.fillText(this.state.cursorAxisPosition.y[key], this.state.cursorPosition.x - 45 * (i + 1), SCREEN_HEIGHT / 5 + 50, 300);\n\n                ctx.strokeStyle = chart.colors[key];\n\n                ctx.moveTo(this.state.cursorPosition.x + 5, this.state.cursorPosition.y[key]);\n                ctx.arc(this.state.cursorPosition.x, this.state.cursorPosition.y[key], 5, 0, 2 * Math.PI);\n\n                ctx.fill();\n                ctx.stroke();\n            }\n        });\n\n        ctx.closePath();\n    }\n\n    mouseDownHandler(e) {\n        e.stopPropagation();\n\n        const pos = this.getMousePos(this.refs.canvas, e);\n\n        if (pos.y > SCREEN_HEIGHT + 50) {\n            this.setState({\n                cursorPinned: false\n            });\n        }\n\n        if (pos.y > SCREEN_HEIGHT + 50 &&\n            pos.x > (this.state.xAxis[this.state.startIndex] - this.state.xAxis[0]) / 10000000 / timeline_xScale + 7 &&\n            pos.x < (this.state.xAxis[this.state.endIndex] - this.state.xAxis[0]) / 10000000 / timeline_xScale - 7) {\n\n            this.setState({\n                dragSelect: true,\n                mousePosition: this.getTimelineCursorPosition(e)\n            });\n        } else if (pos.y > SCREEN_HEIGHT + 50 &&\n            pos.x > (this.state.xAxis[this.state.startIndex] - this.state.xAxis[0]) / 10000000 / timeline_xScale &&\n            pos.x < (this.state.xAxis[this.state.startIndex] - this.state.xAxis[0]) / 10000000 / timeline_xScale + 7\n        ) {\n            this.setState({\n                dragLeftEdge: true,\n                mousePosition: this.getTimelineCursorPosition(e)\n            });\n        } else if (pos.y > SCREEN_HEIGHT + 50 &&\n            pos.x > (this.state.xAxis[this.state.endIndex] - this.state.xAxis[0]) / 10000000 / timeline_xScale - 7 &&\n            pos.x < (this.state.xAxis[this.state.endIndex] - this.state.xAxis[0]) / 10000000 / timeline_xScale) {\n            this.setState({\n                dragRightEdge: true,\n                mousePosition: this.getTimelineCursorPosition(e)\n            });\n        }\n    }\n\n    mouseUpHandler(e) {\n        e.stopPropagation();\n\n        const pos = this.getMousePos(this.refs.canvas, e);\n\n        if (pos.y > SCREEN_HEIGHT + 50) {\n            const cursorPosition = this.getTimelineCursorPosition(e);\n\n            const width = this.state.endIndex - this.state.startIndex;\n            const hWidth = Math.trunc(width / 2);\n\n            const target_startIndex = cursorPosition.xIndex - hWidth > 0 ? cursorPosition.xIndex - hWidth < this.state.xAxis.length - 1 - width ? cursorPosition.xIndex - hWidth : this.state.xAxis.length - 1 - width : 0;\n            const target_endIndex = cursorPosition.xIndex + hWidth < this.state.xAxis.length - 1 ? cursorPosition.xIndex + hWidth > width ? cursorPosition.xIndex + hWidth : width : this.state.xAxis.length - 1;\n\n            if (time_line_intr) clearInterval(time_line_intr);\n\n            const delta = Math.trunc(this.state.xAxis.length / 50);\n\n            time_line_intr = setInterval(() => {\n                let _startIndex = this.state.startIndex;\n                let _endIndex = this.state.endIndex;\n\n                if (this.state.startIndex !== target_startIndex) {\n                    const deltaStart = target_startIndex - this.state.startIndex;\n\n                    let modStartIndex = target_startIndex;\n\n                    if (deltaStart > 0) {\n                        modStartIndex = (this.state.startIndex + delta) > target_startIndex ? target_startIndex : this.state.startIndex + delta;\n                    } else {\n                        modStartIndex = (this.state.startIndex - delta) < target_startIndex ? target_startIndex : this.state.startIndex - delta;\n                    }\n\n                    _startIndex = modStartIndex;\n                }\n\n                if (this.state.endIndex !== target_endIndex) {\n                    const deltaEnd = target_endIndex - this.state.endIndex;\n\n                    let modEndIndex = target_endIndex;\n\n                    if (deltaEnd > 0) {\n                        modEndIndex = (this.state.endIndex + delta) > target_endIndex ? target_endIndex : this.state.endIndex + delta;\n                    } else {\n                        modEndIndex = (this.state.endIndex - delta) < target_endIndex ? target_endIndex : this.state.endIndex - delta;\n                    }\n\n                    _endIndex = modEndIndex;\n                }\n\n                if (this.state.startIndex === target_startIndex && this.state.endIndex === target_endIndex) {\n                    clearInterval(time_line_intr);\n                    this.calcMaxYAxisValue();\n                } else {\n                    this.setState({\n                        startIndex: _startIndex,\n                        endIndex: _endIndex\n                    }, this.draw);\n                }\n            });\n        }\n\n        this.setState({\n            dragSelect: false,\n            dragLeftEdge: false,\n            dragRightEdge: false\n        });\n    }\n\n    mouseMoveHandler(e) {\n        e.stopPropagation();\n\n        const pos = this.getMousePos(this.refs.canvas, e);\n\n        if (pos.y > SCREEN_HEIGHT + 50) {\n            const cursorPosition = this.getTimelineCursorPosition(e);\n\n            if (!cursorPosition) return;\n\n            if (this.state.dragSelect) {\n                const d2 = 112 / this.state.xAxis.length;\n                const d = this.state.xAxis.length / 130;\n                const d1 = SCREEN_WIDTH / 185 / d;\n\n                const delta = Math.trunc((cursorPosition.x - this.state.mousePosition.x) / (d2 + d1));\n\n                if (delta > timeline_delta_step) {\n                    this.setState({\n                        startIndex: this.state.endIndex + delta < this.state.xAxis.length - 1 ? this.state.startIndex + delta : this.state.startIndex + this.state.xAxis.length - 1 - this.state.endIndex,\n                        endIndex: this.state.endIndex + delta < this.state.xAxis.length - 1 ? this.state.endIndex + delta : this.state.xAxis.length - 1,\n                        mousePosition: cursorPosition\n                    }, this.calcMaxYAxisValue);\n                } else if (delta < -timeline_delta_step) {\n                    this.setState({\n                        startIndex: this.state.startIndex > -delta ? this.state.startIndex + delta : 0,\n                        endIndex: this.state.startIndex > -delta ? this.state.endIndex + delta : this.state.endIndex - this.state.startIndex,\n                        mousePosition: cursorPosition\n                    }, this.calcMaxYAxisValue);\n                }\n            } else if (this.state.dragLeftEdge) {\n                const d2 = 112 / this.state.xAxis.length;\n                const d = this.state.xAxis.length / 130;\n                const d1 = SCREEN_WIDTH / 185 / d;\n\n                const delta = Math.trunc((cursorPosition.x - this.state.mousePosition.x) / (d2 + d1));\n\n                if (delta > timeline_delta_step) {\n                    this.setState({\n                        startIndex: this.state.startIndex + delta < this.state.endIndex - min_timeline_width ? this.state.startIndex + delta : this.state.endIndex - min_timeline_width,\n                        mousePosition: cursorPosition\n                    }, this.calcMaxYAxisValue);\n                } else if (delta < -timeline_delta_step) {\n                    this.setState({\n                        startIndex: this.state.startIndex > -delta ? this.state.startIndex + delta : 0,\n                        mousePosition: cursorPosition\n                    }, this.calcMaxYAxisValue);\n                }\n            } else if (this.state.dragRightEdge) {\n                const d2 = 112 / this.state.xAxis.length;\n                const d = this.state.xAxis.length / 130;\n                const d1 = SCREEN_WIDTH / 185 / d;\n\n                const delta = Math.trunc((cursorPosition.x - this.state.mousePosition.x) / (d2 + d1));\n\n                if (delta > timeline_delta_step) {\n                    this.setState({\n                        endIndex: this.state.endIndex + delta < this.state.xAxis.length - 1 ? this.state.endIndex + delta : this.state.xAxis.length - 1,\n                        mousePosition: cursorPosition\n                    }, this.calcMaxYAxisValue);\n                } else if (delta < -timeline_delta_step) {\n                    this.setState({\n                        endIndex: this.state.endIndex + delta > this.state.startIndex + min_timeline_width ? this.state.endIndex + delta : this.state.startIndex + min_timeline_width,\n                        mousePosition: cursorPosition\n                    }, this.calcMaxYAxisValue);\n                }\n            }\n        } else if (!this.state.cursorPinned) {\n            const cursorPosition = this.getCursorPosition(e);\n\n            if (!cursorPosition) return;\n\n            this.state.ctx.clearRect(0, 0, this.refs.canvas.width, this.refs.canvas.height);\n            this.state.ctx.drawImage(_canvas, 0, 0, _canvas.width / RATIO, _canvas.height / RATIO);\n\n            this.setState({\n                cursorPosition\n            }, this.drawCursor.bind(this, this.state.ctx));\n        }\n    }\n\n    canvasLeaveHandler(e) {\n        e.stopPropagation();\n\n        if (!this.state.cursorPinned) {\n            this.state.ctx.clearRect(0, 0, this.refs.canvas.width, this.refs.canvas.height);\n            this.state.ctx.drawImage(_canvas, 0, 0, _canvas.width / RATIO, _canvas.height / RATIO);\n        }\n\n        this.setState({\n            dragSelect: false,\n            dragLeftEdge: false,\n            dragRightEdge: false\n        });\n    }\n\n    calcMaxYAxisValue() {\n        let max_y = 0;\n        let absolute_max_y = 0;\n\n        const keys = Object.keys(this.state.yAxis);\n\n        for (let j = 0; j < keys.length; j++) {\n            const key = keys[j];\n\n            if (this.state.yVisability[key].value) {\n                for (let i = 0; i < this.state.yAxis[key].length; i++) {\n                    if (i <= this.state.endIndex && i >= this.state.startIndex && this.state.yAxis[key][i] > max_y) max_y = this.state.yAxis[key][i];\n                    if (this.state.yAxis[key][i] > absolute_max_y) absolute_max_y = this.state.yAxis[key][i];\n                }\n            }\n        }\n\n        this.setState({\n            max_y: max_y || this.state.max_y,\n            absolute_max_y: absolute_max_y || this.state.absolute_max_y\n        }, this.scaleChart);\n    }\n\n    getMousePos(canvas, e) {\n        const rect = canvas.getBoundingClientRect();\n\n        return {\n            // eslint-disable-next-line\n            x: (typeof e.clientX !== undefined && e.clientX || (e.touches && e.touches[0] ? e.touches[0].clientX : 0) - rect.left) / (rect.right - rect.left) * canvas.width / RATIO,\n            // eslint-disable-next-line\n            y: (typeof e.clientY !== undefined && e.clientY || (e.touches && e.touches[0] ? e.touches[0].clientY : 0) - rect.top) / (rect.bottom - rect.top) * canvas.height / RATIO\n        };\n    }\n\n    getTimelineCursorPosition(e) {\n        const pos = this.getMousePos(this.refs.canvas, e);\n\n        if (pos.x >= this.refs.canvas.width / RATIO || pos.y > this.refs.canvas.height / RATIO || pos.y < SCREEN_HEIGHT + 50) return;\n\n        let real_x = pos.x * 10000000 * timeline_xScale + this.state.xAxis[0];\n        let appr_x = real_x;\n        let xIndex = 0;\n\n        for (let i = 0; i < this.state.xAxis.length; i++) {\n            if (typeof this.state.xAxis[i] === 'number' && real_x > this.state.xAxis[i]) {\n                appr_x = !this.state.xAxis[i + 1] || real_x - this.state.xAxis[i] < this.state.xAxis[i + 1] - real_x ? this.state.xAxis[i] : this.state.xAxis[i + 1];\n                xIndex = i;\n            }\n        }\n\n        return {\n            x: (appr_x - this.state.xAxis[0]) / 10000000 / timeline_xScale,\n            xIndex\n        };\n    }\n\n    getCursorPosition(e) {\n        const pos = this.getMousePos(this.refs.canvas, e);\n\n        if (pos.x >= this.refs.canvas.width / RATIO || pos.y > this.refs.canvas.height / RATIO || pos.y >= SCREEN_HEIGHT) return;\n\n        let real_x = pos.x * 10000000 * xScale + this.state.xAxis[this.state.startIndex];\n        let appr_x = real_x;\n        let appr_y = {};\n\n        for (let i = 0; i < this.state.xAxis.length; i++) {\n            if (typeof this.state.xAxis[i] === 'number' && real_x > this.state.xAxis[i] && i >= this.state.startIndex && i <= this.state.endIndex) {\n                appr_x = !this.state.xAxis[i + 1] || real_x - this.state.xAxis[i] < this.state.xAxis[i + 1] - real_x ? this.state.xAxis[i] : this.state.xAxis[i + 1];\n\n                const keys = Object.keys(this.state.yAxis);\n                for (let j = 0; j < keys.length; j++) {\n                    appr_y[keys[j]] = this.state.yAxis[keys[j]][this.state.xAxis[i] === appr_x ? i : i + 1];\n                }\n            }\n        }\n\n        this.setState({\n            cursorAxisPosition: {\n                y: appr_y\n            }\n        });\n\n        return {\n            x: (appr_x - this.state.xAxis[this.state.startIndex]) / 10000000 / xScale,\n            y: (function () {\n                const result = {};\n\n                Object.keys(appr_y).forEach(key => {\n                    result[key] = SCREEN_HEIGHT - appr_y[key] / yScale\n                });\n\n                return result;\n            })()\n        };\n    }\n\n    buttonClickHandler(key, e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.setState({\n            yVisability: {\n                ...this.state.yVisability,\n                [key]: {\n                    value: !this.state.yVisability[key].value,\n                    status: this.state.yVisability[key].value ? 0 : 2,\n                    alfa: this.state.yVisability[key].value ? 1 : 0\n                }\n            }\n        }, this.calcMaxYAxisValue);\n    }\n\n    canvasClickHandler(e) {\n        e.stopPropagation();\n\n        const pos = this.getMousePos(this.refs.canvas, e);\n        if (pos.y > SCREEN_HEIGHT + 50) return;\n\n        if (!this.state.cursorPinned) {\n            this.setState({\n                cursorPinned: true\n            });\n        } else {\n            const target_position = this.getCursorPosition(e);\n\n            if (!target_position || pos.y > SCREEN_HEIGHT + 50) return;\n\n            const cursor_step = Math.abs(target_position.x - this.state.cursorPosition.x) / 150;\n\n            if (this.state.cursorPosition.x < target_position.x) {\n                if (intr) clearInterval(intr);\n\n                intr = setInterval(() => {\n                    this.state.ctx.clearRect(0, 0, this.refs.canvas.width, this.refs.canvas.height);\n                    this.state.ctx.drawImage(_canvas, 0, 0, _canvas.width / RATIO, _canvas.height / RATIO);\n\n                    if (this.state.cursorPosition.x < target_position.x) {\n                        this.setState({\n                            cursorPosition: {\n                                x: this.state.cursorPosition.x + cursor_step,\n                                y: {}\n                            }\n                        }, this.drawCursor.bind(this, this.state.ctx));\n                    } else {\n                        this.setState({\n                            cursorPosition: target_position,\n                            cursorPinned: false\n                        }, this.drawCursor.bind(this, this.state.ctx));\n\n                        clearInterval(intr);\n                    }\n                });\n            } else if (this.state.cursorPosition.x > target_position.x) {\n                if (intr) clearInterval(intr);\n\n                intr = setInterval(() => {\n                    this.state.ctx.clearRect(0, 0, this.refs.canvas.width, this.refs.canvas.height);\n                    this.state.ctx.drawImage(_canvas, 0, 0, _canvas.width / RATIO, _canvas.height / RATIO);\n\n                    if (this.state.cursorPosition.x > target_position.x) {\n                        this.setState({\n                            cursorPosition: {\n                                x: this.state.cursorPosition.x - cursor_step,\n                                y: {}\n                            }\n                        }, this.drawCursor.bind(this, this.state.ctx));\n                    } else {\n                        this.setState({\n                            cursorPosition: target_position,\n                            cursorPinned: false\n                        }, this.drawCursor.bind(this, this.state.ctx));\n\n                        clearInterval(intr);\n                    }\n                });\n            } else {\n                this.setState({\n                    cursorPinned: false\n                });\n            }\n        }\n    }\n\n    selectChartHandler(e) {\n        chart = _charts[e.target.value];\n\n        let xAxis = [];\n        let yAxis = {};\n\n        chart.columns.forEach(axis => {\n            switch (chart.types[axis[0]]) {\n                case 'x':\n                    xAxis = axis.slice(1, axis.length);\n                    break;\n                case 'line':\n                    yAxis[axis[0]] = axis.slice(1, axis.length);\n                    break;\n                default:\n                    console.log('Unknown type')\n            }\n        });\n\n        min_timeline_width = Math.trunc(xAxis.length / 5);\n\n        let max_y = 0;\n        let absolute_max_y = 0;\n        let yVisability = {};\n\n        Object.keys(yAxis).forEach(key => {\n            yVisability[key] = {\n                value: true,\n                status: 0\n            };\n\n            for (let i = 0; i < yAxis[key].length; i++) {\n                if (yAxis[key][i] > max_y && i >= 0 && i <= xAxis.length - 1) max_y = yAxis[key][i];\n                if (yAxis[key][i] > absolute_max_y) absolute_max_y = yAxis[key][i];\n            }\n        });\n\n\n        yScale = max_y / (SCREEN_HEIGHT - SCREEN_HEIGHT / 10);\n        xScale = (xAxis[min_timeline_width] - xAxis[0]) / 10000000 / SCREEN_WIDTH;\n\n        timeline_xScale = (xAxis[xAxis.length - 1] - xAxis[0]) / 10000000 / SCREEN_WIDTH;\n        timeline_yScale = absolute_max_y / (timeline_height - timeline_height / 10);\n\n        this.setState({\n            ctx,\n            _ctx,\n            xAxis,\n            yAxis,\n            max_y,\n            absolute_max_y,\n            yVisability,\n            startIndex: 0,\n            endIndex: min_timeline_width,\n            cursorPosition: {\n                x: 0,\n                y: {}\n            },\n            cursorAxisPosition: {\n                x: 0\n            },\n            cursorPinned: false,\n            gridStepNumber: 0,\n            target_yScale: yScale\n        }, this.draw);\n\n    }\n\n    selectPerfHandler(e) {\n        loadType = loadTypes[e.target.value].call(null);\n\n        if (_devicePixelRatio >= 2 && _devicePixelRatio !== RATIO) {\n            this.refs.canvas.width *= 2;\n            this.refs.canvas.height *= 2;\n\n            RATIO = 2;\n\n            _canvas.width = this.refs.canvas.width;\n            _canvas.height = this.refs.canvas.height;\n\n            ctx = this.refs.canvas.getContext('2d');\n            _ctx = _canvas.getContext('2d');\n            ctx.setTransform(2, 0, 0, 2, 0, 0);\n            _ctx.setTransform(2, 0, 0, 2, 0, 0);\n        } else if (_devicePixelRatio === 1 && _devicePixelRatio !== RATIO) {\n\n            this.refs.canvas.width /= 2;\n            this.refs.canvas.height /= 2;\n\n            RATIO = 1;\n\n            _canvas.width = this.refs.canvas.width;\n            _canvas.height = this.refs.canvas.height;\n            ctx = this.refs.canvas.getContext('2d');\n            _ctx = _canvas.getContext('2d');\n            //ctx.setTransform(2, 0, 0, 2, 0, 0);\n            //_ctx.setTransform(2, 0, 0, 2, 0, 0);\n        }\n\n        scale_steps = loadType / chart.columns.length;\n\n        this.setState({\n            ctx: ctx,\n            _ctx: _ctx\n        }, this.draw);\n    }\n\n    renderButtons() {\n        return this.state ?\n            Object.keys(this.state.yAxis).map(key =>\n                <button key={key} onClick={this.buttonClickHandler.bind(this, key)}>{key}</button>) :\n            [];\n    }\n\n    renderOptions() {\n        return perfomance.map(option =>\n                <option key={option.name} value={option.value}>{option.name}</option>);\n    }\n\n    renderChartsOptions() {\n        return charts.map(option =>\n            <option key={option.name} value={option.value}>{option.name}</option>);\n    }\n\n    render() {\n        return (\n            <div>\n                <canvas ref=\"canvas\"\n                        width={SCREEN_WIDTH}\n                        height={SCREEN_HEIGHT + 50 + SCREEN_HEIGHT / 6}\n                        onMouseMove={this.mouseMoveHandler.bind(this)}\n                        onClick={this.canvasClickHandler.bind(this)}\n                        onMouseLeave={this.canvasLeaveHandler.bind(this)}\n                        onMouseDown={this.mouseDownHandler.bind(this)}\n                        onMouseUp={this.mouseUpHandler.bind(this)}\n                        onTouchStart={this.mouseDownHandler.bind(this)}\n                        onTouchEnd={this.mouseUpHandler.bind(this)}\n                        onTouchMove={this.mouseMoveHandler.bind(this)}\n                />\n\n                <div>\n                    {this.renderButtons()}\n                    <select defaultValue='DEFAULT' onChange={this.selectPerfHandler.bind(this)}>\n                        {this.renderOptions()}\n                    </select>\n                    <select defaultValue={0} onChange={this.selectChartHandler.bind(this)}>\n                        {this.renderChartsOptions()}\n                    </select>\n                </div>\n\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { CanvasComponent } from './CanvasComponent';\n\nReactDOM.render(<CanvasComponent />, document.getElementById('root'));\n"],"sourceRoot":""}